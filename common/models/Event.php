<?php

namespace common\models;

use common\models\base\__Event;
use Yii;
use yii\helpers\Url;

class Event extends __Event
{

    public $state;

    const STATEA = 1;
    const STATEB = 2;
    const STATEC = 3;
    const STATED = 4;
    const STATEE = 5;


    const COLORA = '#CCCCCC';
    const COLORB = '#4caf50';
    const COLORC = '#FFC5C5';
    const COLORD = '#E60012';
    const COLORE = '#DDDDDD';


    public function getRegisterType()
    {
        return $this->hasMany(EventType::className(), ['matchid' => 'id']);
    }



    public function fields()
    {
        $fields = parent::fields(); // TODO: Change the autogenerated stub
        $fields['state'] = function ($model) {
            return self::getStateInfo($model);
        };
        $fields['duration'] =   function ($model) {
            //!!!TODO 24H
            return gmdate("H时i分", $model->end_time - $model->start_time);
        };
        return $fields;
    }

    public function extraFields()
    {
        return ['news', 'functions', 'registerType', 'favorite', 'activities'];
    }

    /**
     * 状态和条件map
     * @return array
     */
    static function stateConditionMap()
    {
        return [
            self::STATEA => ['>', 'reg_start_time', time()],
            self::STATEB => ['and', ['<=', 'reg_start_time', time()], ['>=', 'reg_end_time', time()]],
            self::STATEC => ['and', ['>', 'start_time', time()], ['<=', 'reg_end_time', time()]],
            self::STATED => ['and', ['<=', 'start_time', time()], ['>=', 'end_time', time()]],
            self::STATEE => ['<', 'end_time', time()]
        ];
    }
    /**
     * @param $model
     * @return mixed
     */
    static function getStateInfo($model)
    {

        $stateList = self::stateList();
        $newstateList = [];
        foreach ($stateList as $key => $v) {
            $newstateList[$v['key']]    =   $v;
        }

        if ($model->reg_start_time > time()) {
            return $newstateList[self::STATEA];
        } else if ($model->reg_start_time <= time() && $model->reg_end_time >= time()) {
            return $newstateList[self::STATEB];
        } else if ($model->start_time > time() && $model->reg_end_time <= time()) {
            return  $newstateList[self::STATEC];
        } else if ($model->start_time <= time() && $model->end_time >= time()) {
            return  $newstateList[self::STATED];
        } else if ($model->end_time < time()) {
            return  $newstateList[self::STATEE];
        } else {
            return [
                'key' => '',
                'value' => '',
                'color' => ''
            ];
        }
    }

    static function stateList()
    {
        return [
            [
                'key' => self::STATEA,
                'value' => '未开始',
                'color' => self::COLORA
            ],
            [
                'key' => self::STATEB,
                'value' => '报名中',
                'color' => self::COLORB
            ],
            [
                'key' => self::STATEC,
                'value' => '未开始',
                'color' =>  self::COLORC
            ],
            [
                'key' => self::STATED,
                'value' => '进行中',
                'color' => self::COLORD
            ],
            [
                'key' => self::STATEE,
                'value' => '已结束',
                'color' => self::COLORE
            ],
        ];
    }

    public function getIDsByTitle($title)
    {
        $data = $this->find()
            ->asArray()
            ->select(['id'])
            ->where([
                'status' => 1
            ])
            ->andWhere([
                'like', 'title', $title
            ])
            ->all();

        return array_column($data, 'id');
    }

    public function getTitleByID($id)
    {
        $data = $this->find()->asArray()
            ->select('title')
            ->where(['id' => $id])
            ->one();
        if (isset($data['title'])) {
            return $data['title'];
        }

        return '-';
    }
}
